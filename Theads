import java.util.Random;
import java.util.concurrent.TimeUnit;
 
class numerosA implements Runnable {
 
    private Random ale;
    private int quant;
 
    public RandomNumbers(int quant) {
        this.ale = new Random();
        this.quant = quant;
    }
 
    public void run () {
        for (int i = 0; i < quant; i++) {
            this.ale.nextInt(10000);
        }
    }
}
 
public class Um {
    public static void main(String[] args){
        int[] threads = {1, 2,3, 4, 5, 6, 7, 8, 9,10};
        for (int i = 0; i < threads.length; i++){
            long startTime = System.nanoTime();
            aleThreads(threads[i], 20000);
            long elapsedTime = System.nanoTime() - startTime;
            System.out.println("Tempo rodando " + threads[i] + " thread" + (threads[i] > 1 ? "s" : "") + " milisegundos: " + TimeUnit.NANOSECONDS.toMicros(elapsedTime));
        }
    }
 
    public static void aleThreads(int qreads, int quant){
        quant = (int) quant / qreads;
        for (int i = 1; i <= qThreads; i++){
            new Thread(new RandomNumbers(quant)).start();
        }
    }
}
